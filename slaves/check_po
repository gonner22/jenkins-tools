#!/bin/sh
# -*- mode: sh; sh-basic-offset: 4; indent-tabs-mode: nil; -*-
# vim: set filetype=sh sw=4 sts=4 expandtab autoindent:

# Usage: check_po.sh [LANGUAGE]
# or
# Usage: check_po.sh [file1 [file2]...]

set -u

checkOutput()
{
    if [ -n "$1" ]; then
        echo "$2"
        echo "$1"
        exit 1
    fi
}

files()
{
    if [ -z "$FILES" ]; then
        find -wholename ./tmp -prune -o \( -iname "$FILE_GLOB" -print0 \)
    else
        echo -n "$FILES" | tr " " "\0"
    fi
}

checkPOHeader()
{
    OUTPUT=$(files \
        | xargs -0 --max-procs="$CPUS" --max-args=64 \
            grep -L "\"${1}\\\n\"")
    checkOutput "$OUTPUT" "$2"
}

if ! [ -x "`which i18nspector`" ] ; then
    echo "i18nspector: command not found"
    echo "You need to install i18nspector first. See /contribute/l10n_tricks."
    exit 2
fi

FILES=""
if [ $# -eq 0 ] ; then
    FILE_GLOB='*.po'
elif [ $# -eq 1 -a ! -f "${1}" ] ; then
    FILE_GLOB="*.${1}.po"
else
    FILES="$@"
fi

CPUS=$(egrep '^processor[[:space:]]+:' /proc/cpuinfo | wc -l)

PATTERNS_FILE="$(mktemp -t XXXXXX.patterns)"
echo "
boilerplate-in-date
boilerplate-in-initial-comments
boilerplate-in-language-team
boilerplate-in-last-translator
boilerplate-in-project-id-version
codomain-error-in-plural-forms
codomain-error-in-unused-plural-forms
conflict-marker-in-header-entry
fuzzy-header-entry
incorrect-plural-forms
invalid-content-transfer-encoding
invalid-date
invalid-language
invalid-last-translator
language-team-equal-to-last-translator
no-language-header-field
no-package-name-in-project-id-version
no-plural-forms-header-field
no-report-msgid-bugs-to-header-field
no-version-in-project-id-version
stray-previous-msgid
unable-to-determine-language
unknown-poedit-language
unusual-plural-forms
unusual-unused-plural-forms
" | grep -v '^$' > "$PATTERNS_FILE"

OUTPUT_I18NINSPECTOR=$(files \
                | xargs -0 --max-procs="$CPUS" --max-args=64 i18nspector \
                | grep -v --line-regexp '' \
                | grep -v -f "$PATTERNS_FILE")

### Output and exit code
# Our automated testing jobs depend on it, beware!

checkOutput "$OUTPUT_I18NINSPECTOR" "i18nspector is not happy with following files:"

#Check Content-Type: text/plain; charset=UTF-8\n
checkPOHeader "Content-Type: text/plain; charset=UTF-8" "Content-Type is not text/plain; charset=UTF-8:"

#Check Project-Id-Version: \n
checkPOHeader "Project-Id-Version: " "Project-Id-Version header is not empty for following files:"

#Check Language-Team: Tails translators <tails-l10n@boum.org>\n
checkPOHeader "Language-Team: Tails translators <tails-l10n@boum.org>" "Language-Team header is not 'Tails translators <tails-l10n@boum.org>':"

#Check Last-Translator: Tails translators\n
checkPOHeader "Last-Translator: Tails translators" "Last-Translator header is not 'Tails translators':"

#Check Language like file extension Language: LANG\n

# FNAME is full path (./pathto/file.inital.de.po)
# BASENAME is only the name of the file (file.inital.de.po)
# BASENAME1 is the name without po (file.inital.de)
# LANG the language we expect (de)

OUTPUT_LANGUAGE=$(files \
            | xargs -0 --max-procs="$CPUS" --max-args=64 -I {} \
                sh -c 'FNAME="{}"; BASENAME="${FNAME#*/}"; BASENAME1="${BASENAME%.*}"; LANG="${BASENAME1##*.}"; grep -L "\"Language: ${LANG}\\\n\"" {}')
checkOutput "$OUTPUT_LANGUAGE" "langauge header is not like the file extension:"

exit 0
